/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721A,
  ERC721AInterface,
} from "../../../../erc721a/contracts/ERC721A.sol/ERC721A";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c8b38038062001c8b8339818101604052810190620000379190620001ae565b81600290805190602001906200004f9291906200008c565b508060039080519060200190620000689291906200008c565b50620000796200008760201b60201c565b600081905550505062000391565b600090565b8280546200009a90620002b6565b90600052602060002090601f016020900481019282620000be57600085556200010a565b82601f10620000d957805160ff19168380011785556200010a565b828001600101855582156200010a579182015b8281111562000109578251825591602001919060010190620000ec565b5b5090506200011991906200011d565b5090565b5b80821115620001385760008160009055506001016200011e565b5090565b6000620001536200014d846200024a565b62000221565b9050828152602081018484840111156200016c57600080fd5b6200017984828562000280565b509392505050565b600082601f8301126200019357600080fd5b8151620001a58482602086016200013c565b91505092915050565b60008060408385031215620001c257600080fd5b600083015167ffffffffffffffff811115620001dd57600080fd5b620001eb8582860162000181565b925050602083015167ffffffffffffffff8111156200020957600080fd5b620002178582860162000181565b9150509250929050565b60006200022d62000240565b90506200023b8282620002ec565b919050565b6000604051905090565b600067ffffffffffffffff82111562000268576200026762000351565b5b620002738262000380565b9050602081019050919050565b60005b83811015620002a057808201518184015260208101905062000283565b83811115620002b0576000848401525b50505050565b60006002820490506001821680620002cf57607f821691505b60208210811415620002e657620002e562000322565b5b50919050565b620002f78262000380565b810181811067ffffffffffffffff8211171562000319576200031862000351565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6118ea80620003a16000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025d578063b88d4fde14610279578063c87b56dd14610295578063e985e9c5146102c5576100ea565b80636352211e146101df57806370a082311461020f57806395d89b411461023f576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806318160ddd1461018957806323b872dd146101a757806342842e0e146101c3576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b61010960048036038101906101049190611409565b6102f5565b60405161011691906115df565b60405180910390f35b610127610387565b60405161013491906115fa565b60405180910390f35b6101576004803603810190610152919061145b565b610419565b6040516101649190611578565b60405180910390f35b610187600480360381019061018291906113cd565b610498565b005b6101916105dc565b60405161019e919061161c565b60405180910390f35b6101c160048036038101906101bc91906112c7565b6105f3565b005b6101dd60048036038101906101d891906112c7565b610918565b005b6101f960048036038101906101f4919061145b565b610938565b6040516102069190611578565b60405180910390f35b61022960048036038101906102249190611262565b61094a565b604051610236919061161c565b60405180910390f35b610247610a03565b60405161025491906115fa565b60405180910390f35b61027760048036038101906102729190611391565b610a95565b005b610293600480360381019061028e9190611316565b610c0d565b005b6102af60048036038101906102aa919061145b565b610c80565b6040516102bc91906115fa565b60405180910390f35b6102df60048036038101906102da919061128b565b610d1f565b6040516102ec91906115df565b60405180910390f35b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061035057506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103805750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60606002805461039690611786565b80601f01602080910402602001604051908101604052809291908181526020018280546103c290611786565b801561040f5780601f106103e45761010080835404028352916020019161040f565b820191906000526020600020905b8154815290600101906020018083116103f257829003601f168201915b5050505050905090565b600061042482610db3565b61045a576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6006600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104a382610938565b90508073ffffffffffffffffffffffffffffffffffffffff166104c4610e12565b73ffffffffffffffffffffffffffffffffffffffff1614610527576104f0816104eb610e12565b610d1f565b610526576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b826006600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60006105e6610e1a565b6001546000540303905090565b60006105fe82610e1f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610665576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008061067184610eed565b915091506106878187610682610e12565b610f14565b6106d35761069c86610697610e12565b610d1f565b6106d2576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561073a576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107478686866001610f58565b801561075257600082555b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081546001900391905081905550600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905550610820856107fc888887610f5e565b7c020000000000000000000000000000000000000000000000000000000017610f86565b600460008681526020019081526020016000208190555060007c0200000000000000000000000000000000000000000000000000000000841614156108a85760006001850190506000600460008381526020019081526020016000205414156108a65760005481146108a5578360046000838152602001908152602001600020819055505b5b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46109108686866001610fb1565b505050505050565b61093383838360405180602001604052806000815250610c0d565b505050565b600061094382610e1f565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109b2576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b606060038054610a1290611786565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3e90611786565b8015610a8b5780601f10610a6057610100808354040283529160200191610a8b565b820191906000526020600020905b815481529060010190602001808311610a6e57829003601f168201915b5050505050905090565b610a9d610e12565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b02576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060076000610b0f610e12565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16610bbc610e12565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c0191906115df565b60405180910390a35050565b610c188484846105f3565b60008373ffffffffffffffffffffffffffffffffffffffff163b14610c7a57610c4384848484610fb7565b610c79576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b50505050565b6060610c8b82610db3565b610cc1576040517fa14c4b5000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ccb611117565b9050600081511415610cec5760405180602001604052806000815250610d17565b80610cf68461112e565b604051602001610d07929190611554565b6040516020818303038152906040525b915050919050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600081610dbe610e1a565b11158015610dcd575060005482105b8015610e0b575060007c0100000000000000000000000000000000000000000000000000000000600460008581526020019081526020016000205416145b9050919050565b600033905090565b600090565b60008082905080610e2e610e1a565b11610eb657600054811015610eb55760006004600083815260200190815260200160002054905060007c010000000000000000000000000000000000000000000000000000000082161415610eb3575b6000811415610ea9576004600083600190039350838152602001908152602001600020549050610e7e565b8092505050610ee8565b505b5b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60008060006006600085815260200190815260200160002090508092508254915050915091565b600073ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b60008060e883901c905060e8610f75868684611188565b62ffffff16901b9150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610fdd610e12565b8786866040518563ffffffff1660e01b8152600401610fff9493929190611593565b602060405180830381600087803b15801561101957600080fd5b505af192505050801561104a57506040513d601f19601f820116820180604052508101906110479190611432565b60015b6110c4573d806000811461107a576040519150601f19603f3d011682016040523d82523d6000602084013e61107f565b606091505b506000815114156110bc576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052806000815250905090565b60606080604051019050806040528082600183039250600a81066030018353600a810490505b801561117457600183039250600a81066030018353600a81049050611154565b508181036020830392508083525050919050565b60009392505050565b60006111a461119f8461165c565b611637565b9050828152602081018484840111156111bc57600080fd5b6111c7848285611744565b509392505050565b6000813590506111de81611858565b92915050565b6000813590506111f38161186f565b92915050565b60008135905061120881611886565b92915050565b60008151905061121d81611886565b92915050565b600082601f83011261123457600080fd5b8135611244848260208601611191565b91505092915050565b60008135905061125c8161189d565b92915050565b60006020828403121561127457600080fd5b6000611282848285016111cf565b91505092915050565b6000806040838503121561129e57600080fd5b60006112ac858286016111cf565b92505060206112bd858286016111cf565b9150509250929050565b6000806000606084860312156112dc57600080fd5b60006112ea868287016111cf565b93505060206112fb868287016111cf565b925050604061130c8682870161124d565b9150509250925092565b6000806000806080858703121561132c57600080fd5b600061133a878288016111cf565b945050602061134b878288016111cf565b935050604061135c8782880161124d565b925050606085013567ffffffffffffffff81111561137957600080fd5b61138587828801611223565b91505092959194509250565b600080604083850312156113a457600080fd5b60006113b2858286016111cf565b92505060206113c3858286016111e4565b9150509250929050565b600080604083850312156113e057600080fd5b60006113ee858286016111cf565b92505060206113ff8582860161124d565b9150509250929050565b60006020828403121561141b57600080fd5b6000611429848285016111f9565b91505092915050565b60006020828403121561144457600080fd5b60006114528482850161120e565b91505092915050565b60006020828403121561146d57600080fd5b600061147b8482850161124d565b91505092915050565b61148d816116d0565b82525050565b61149c816116e2565b82525050565b60006114ad8261168d565b6114b781856116a3565b93506114c7818560208601611753565b6114d081611847565b840191505092915050565b60006114e682611698565b6114f081856116b4565b9350611500818560208601611753565b61150981611847565b840191505092915050565b600061151f82611698565b61152981856116c5565b9350611539818560208601611753565b80840191505092915050565b61154e8161173a565b82525050565b60006115608285611514565b915061156c8284611514565b91508190509392505050565b600060208201905061158d6000830184611484565b92915050565b60006080820190506115a86000830187611484565b6115b56020830186611484565b6115c26040830185611545565b81810360608301526115d481846114a2565b905095945050505050565b60006020820190506115f46000830184611493565b92915050565b6000602082019050818103600083015261161481846114db565b905092915050565b60006020820190506116316000830184611545565b92915050565b6000611641611652565b905061164d82826117b8565b919050565b6000604051905090565b600067ffffffffffffffff82111561167757611676611818565b5b61168082611847565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006116db8261171a565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611771578082015181840152602081019050611756565b83811115611780576000848401525b50505050565b6000600282049050600182168061179e57607f821691505b602082108114156117b2576117b16117e9565b5b50919050565b6117c182611847565b810181811067ffffffffffffffff821117156117e0576117df611818565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611861816116d0565b811461186c57600080fd5b50565b611878816116e2565b811461188357600080fd5b50565b61188f816116ee565b811461189a57600080fd5b50565b6118a68161173a565b81146118b157600080fd5b5056fea264697066735822122046d3eaccf106331f81e8dd966d90ef12e1fa65da11d97e16f9d810b9cc5015d264736f6c63430008040033";

type ERC721AConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721AConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721A__factory extends ContractFactory {
  constructor(...args: ERC721AConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721A> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721A>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721A {
    return super.attach(address) as ERC721A;
  }
  override connect(signer: Signer): ERC721A__factory {
    return super.connect(signer) as ERC721A__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721AInterface {
    return new utils.Interface(_abi) as ERC721AInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721A {
    return new Contract(address, _abi, signerOrProvider) as ERC721A;
  }
}
