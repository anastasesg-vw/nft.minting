import axios from 'axios';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useEffect, useState } from 'react';
import { useWeb3Context } from '../src/context';

interface Token {
  dna: string;
  name: string;
  description: string;
  image: string;
  edition: number;
  date: Date;
  attributes: {
    trait_type: string;
    value: string;
  }[];
  compiler: string;
}

const Home: NextPage = () => {
  const { web3Provider, address, nft, connect, disconnect } = useWeb3Context();
  const [tokens, setTokens] = useState<Token[]>([]);

  //   useEffect(() => {
  //     if (web3Provider && nft && address) {
  //       const getTokens = async () => {
  //         const tkns: Token[] = [];
  //         for (let index = 0; index < 80; index++) {
  //           if (await nft.ownerOf(index + 1)) {
  //             const tokenUri = await nft.tokenURI(index + 1);
  //             const url = `https://ipfs.io/ipfs/${tokenUri.replace(
  //               'ipfs://',
  //               '',
  //             )}`;
  //             tkns[index] = (await axios.get<Token>(url)).data;
  //             tkns[index].image = `https://ipfs.io/ipfs/${tkns[
  //               index
  //             ].image.replace('ipfs://', '')}`;
  //           }
  //         }

  //         console.log(tkns);
  //         return tkns;
  //       };

  //       getTokens().then((response) => {
  //         setTokens(response);
  //       });
  //     }
  //   }, [web3Provider, nft, address]);

  return (
    <div className="flex h-screen">
      <div className="m-auto">
        <Head>
          <title>Staking Dashboard</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <header className="pt-8 pb-4 text-center text-4xl font-semibold">
          Dashboard
        </header>
        <main className="container mx-auto flex flex-col items-center">
          {web3Provider ? (
            <button type="button" onClick={disconnect!}>
              Disconnect
            </button>
          ) : (
            <button type="button" onClick={connect!}>
              Connect
            </button>
          )}
        </main>
        <footer></footer>
      </div>
    </div>
  );
};

export default Home;
